const StoreHistoryHandler = (mergeState, data) => (event) => {
  const eventData = event.state || data.initRoute;
  mergeState({
    currentRouteId: eventData.currentRouteId,
    currentTitle: eventData.currentTitle,
  });
  document.title = eventData.title || 'Home';
};

const StoreNavigate = (mergeState, data) => ({
  newPath,
  newTitle = null,
  newState = { uiAlert: null }, // don't account for newState in history
}) => {
  if (!newTitle) {
    newTitle =
      (data.routes[newPath] && data.routes[newPath].title) ||
      data.routes.home.title;
  }
  document.title = newTitle;
  const historyState = {
    currentRouteId: newPath,
    currentTitle: newTitle,
  };
  window.history.pushState(historyState, null, newPath);
  mergeState({
    ...historyState,
    ...newState,
  });
  window.scrollTo(0, 0);
};

export { StoreHistoryHandler, StoreNavigate };
